// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Texnokaktus.ProgOlymp.ResultService.DataAccess.Context;

#nullable disable

namespace Texnokaktus.ProgOlymp.ResultService.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ContestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContestId")
                        .HasColumnType("int");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<long>("StageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("StageId");

                    b.HasAlternateKey("ContestId", "Stage");

                    b.ToTable("ContestResults");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ContestResultId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("ContestResultId", "Alias");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ProblemResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseScore")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("ProblemId", "ParticipantId");

                    b.ToTable("ProblemResults");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ScoreAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Adjustment")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProblemResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProblemResultId");

                    b.ToTable("ScoreAdjustments");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.Problem", b =>
                {
                    b.HasOne("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ContestResult", null)
                        .WithMany("Problems")
                        .HasForeignKey("ContestResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ProblemResult", b =>
                {
                    b.HasOne("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.Problem", null)
                        .WithMany("Results")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ScoreAdjustment", b =>
                {
                    b.HasOne("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ProblemResult", null)
                        .WithMany("Adjustments")
                        .HasForeignKey("ProblemResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ContestResult", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.Problem", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("Texnokaktus.ProgOlymp.ResultService.DataAccess.Entities.ProblemResult", b =>
                {
                    b.Navigation("Adjustments");
                });
#pragma warning restore 612, 618
        }
    }
}
